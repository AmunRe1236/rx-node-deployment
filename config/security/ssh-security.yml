# üé© GENTLEMAN SSH Security Configuration
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# Sichere SSH-Konfiguration f√ºr Remote-Updates

ssh_security:
  # Base SSH Configuration
  base_config:
    port: 22
    protocol: 2
    permit_root_login: false
    password_authentication: false
    pubkey_authentication: true
    challenge_response_authentication: false
    use_pam: true
    
  # Key Management
  key_management:
    # Permanent keys (for regular access)
    permanent_keys:
      - type: "ed25519"
        path: "/home/gentleman/.ssh/authorized_keys"
        comment: "gentleman-homelab-permanent"
        
    # Temporary keys (for updates)
    temporary_keys:
      directory: "/home/gentleman/.ssh/temp_keys"
      max_duration: 600  # 10 minutes
      cleanup_interval: 300  # 5 minutes
      max_concurrent: 3
      
  # Access Control
  access_control:
    # Allowed users
    allowed_users:
      - "gentleman"
      - "gentlemanlocal"  # Fallback user
      
    # Denied users
    denied_users:
      - "root"
      - "admin"
      - "ubuntu"
      
    # IP restrictions
    allowed_networks:
      - "192.168.100.0/24"  # Nebula network
      - "192.168.68.0/24"   # Local network
      - "127.0.0.1/32"      # Localhost
      
    # Time-based restrictions
    time_restrictions:
      update_window:
        start: "06:00"
        end: "23:00"
        timezone: "Europe/Berlin"
        
  # Security Features
  security_features:
    # Rate limiting
    rate_limiting:
      max_auth_tries: 3
      login_grace_time: 30
      max_sessions: 2
      
    # Logging
    logging:
      level: "INFO"
      facility: "AUTH"
      log_failed_attempts: true
      log_successful_logins: true
      
    # Connection limits
    connection_limits:
      max_startups: "3:30:10"
      client_alive_interval: 300
      client_alive_count_max: 2
      
  # Temporary Access System
  temp_access:
    # Key generation
    key_generation:
      algorithm: "ed25519"
      key_size: 256
      comment_format: "gentleman-temp-{timestamp}"
      
    # Approval workflow
    approval:
      required: true
      timeout: 300  # 5 minutes
      approvers:
        - "amonbaumgartner@gentlemail.com"
        - "gentleman@matrix.gentleman.local"
        
    # Automatic cleanup
    cleanup:
      enabled: true
      check_interval: 60  # 1 minute
      max_key_age: 600   # 10 minutes
      
  # Monitoring
  monitoring:
    # Failed login attempts
    failed_logins:
      threshold: 5
      window: 300  # 5 minutes
      action: "block_ip"
      
    # Unusual activity
    unusual_activity:
      multiple_sessions: true
      off_hours_access: true
      unknown_keys: true
      
    # Alerts
    alerts:
      matrix_room: "#gentleman-security:matrix.gentleman.local"
      email: "amonbaumgartner@gentlemail.com"
      
# SSH Daemon Configuration Template
sshd_config_template: |
  # üé© GENTLEMAN SSH Configuration
  # Generated: {timestamp}
  
  # Basic Settings
  Port 22
  Protocol 2
  
  # Authentication
  PermitRootLogin no
  PasswordAuthentication no
  PubkeyAuthentication yes
  AuthorizedKeysFile .ssh/authorized_keys .ssh/temp_keys/%u
  ChallengeResponseAuthentication no
  UsePAM yes
  
  # Security
  AllowUsers gentleman gentlemanlocal
  DenyUsers root admin ubuntu
  MaxAuthTries 3
  LoginGraceTime 30
  MaxSessions 2
  MaxStartups 3:30:10
  
  # Connection Management
  ClientAliveInterval 300
  ClientAliveCountMax 2
  TCPKeepAlive yes
  
  # Logging
  LogLevel INFO
  SyslogFacility AUTH
  
  # Subsystems
  Subsystem sftp /usr/lib/openssh/sftp-server
  
  # GENTLEMAN Specific
  Match User gentleman
      AuthorizedKeysCommand /usr/local/bin/gentleman-ssh-keys
      AuthorizedKeysCommandUser gentleman
      
# SSH Key Management Script Template
ssh_key_script_template: |
  #!/bin/bash
  
  # üé© GENTLEMAN SSH Key Management
  # Handles temporary and permanent SSH keys
  
  USER="$1"
  TEMP_KEY_DIR="/home/$USER/.ssh/temp_keys"
  PERM_KEY_FILE="/home/$USER/.ssh/authorized_keys"
  MAX_KEY_AGE=600  # 10 minutes
  
  # Function to clean expired keys
  cleanup_expired_keys() {
      if [ -d "$TEMP_KEY_DIR" ]; then
          find "$TEMP_KEY_DIR" -name "*.pub" -mmin +$((MAX_KEY_AGE/60)) -delete
      fi
  }
  
  # Function to list valid keys
  list_valid_keys() {
      # Permanent keys
      if [ -f "$PERM_KEY_FILE" ]; then
          cat "$PERM_KEY_FILE"
      fi
      
      # Temporary keys (not expired)
      if [ -d "$TEMP_KEY_DIR" ]; then
          find "$TEMP_KEY_DIR" -name "*.pub" -mmin -$((MAX_KEY_AGE/60)) -exec cat {} \;
      fi
  }
  
  # Main execution
  cleanup_expired_keys
  list_valid_keys

# Fail2Ban Configuration for SSH
fail2ban_ssh_config: |
  [sshd]
  enabled = true
  port = ssh
  filter = sshd
  logpath = /var/log/auth.log
  maxretry = 3
  findtime = 300
  bantime = 3600
  
  # GENTLEMAN specific actions
  action = iptables[name=SSH, port=ssh, protocol=tcp]
           matrix-notify[room=#gentleman-security:matrix.gentleman.local]

# Security Monitoring Script
security_monitor_template: |
  #!/bin/bash
  
  # üé© GENTLEMAN SSH Security Monitor
  # Monitors SSH access and sends alerts
  
  LOG_FILE="/var/log/auth.log"
  MATRIX_WEBHOOK="http://localhost:8093/matrix/security-alert"
  
  # Monitor for failed logins
  tail -f "$LOG_FILE" | while read line; do
      if echo "$line" | grep -q "Failed password"; then
          IP=$(echo "$line" | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
          USER=$(echo "$line" | grep -oE 'for [a-zA-Z0-9_-]+' | cut -d' ' -f2)
          
          # Send alert
          curl -s -X POST "$MATRIX_WEBHOOK" \
              -H "Content-Type: application/json" \
              -d "{\"message\": \"üö® Failed SSH login: $USER from $IP\"}"
      fi
  done 